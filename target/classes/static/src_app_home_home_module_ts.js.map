{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/components/alerts/alerts.service.ts","./src/app/components/components.module.ts","./src/app/components/file-product-confirm-list/file-product-confirm-list.component.ts","./src/app/components/new-file-product/new-file-product.component.ts","./src/app/components/scanned-product-list/scanned-product-list.component.ts","./src/app/components/sccaner/sccaner.component.ts","./src/app/controller/codes/codes-request.service.ts","./src/app/controller/fileProduct/file-product-request.service.ts","./src/app/controller/scanner/scanner-request.service.ts","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/home.page.ts","./src/app/services/scanner-service/scanner.service.ts","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { ScannerRequestService } from 'src/app/controller/scanner/scanner-request.service';\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\nimport { ScannerService } from 'src/app/services/scanner-service/scanner.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertsService {\n\n  constructor(private alertController: AlertController,\n    private scannerRequestService: ScannerRequestService,\n    private scannerService: ScannerService) { }\n\n  async enterBack(){\n    const alert = await this.alertController.create({\n      header: 'Ya ingreso este producto',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: () => {\n            console.log('Cancelar');\n          },\n        },\n        {\n          text: 'Actualizar',\n          handler: () => {\n            console.log('Actualizar cantidad');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async deleteScannedProduct(id: number){\n    const alert = await this.alertController.create({\n      header: '¿Eliminar producto? ',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: () => {\n            console.log('Cancelar');\n          },\n        },\n        {\n          text: 'Eliminar',\n          handler: () => {\n            this.scannerRequestService.deleteScannedProduct(id).subscribe(data => {\n              console.log('Eliminado', data);\n              this.scannerRequestService.getAllScannedProduct().subscribe(requestData => {\n                console.log('Toda la lista es: ', requestData);\n                this.scannerService.triggerUpdatedListScanned.emit(requestData);\n              });\n            });\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async productUpdate(scannedProduct: ScannerProduct) {\n    const alert = await this.alertController.create({\n      header: 'Actualizar cantidad',\n      inputs: [\n        {\n          placeholder: 'Cantidad',\n          name: 'amount',\n          type: 'number'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel'\n        },\n        {\n          text: 'Actualizar',\n          handler: (alertData) => {\n            const productUpdated: ScannerProduct = {\n              id: scannedProduct.id,\n              amount: alertData.amount,\n              fileProduct: scannedProduct.fileProduct\n            };\n            this.scannerRequestService.updateScannedProduct(scannedProduct.id, productUpdated).subscribe(data => {\n              this.scannerRequestService.getAllScannedProduct().subscribe(returnData => {\n                  this.scannerService.triggerUpdatedListScanned.emit(returnData);\n                });\n              console.log('Producto actualizado', data);\n            });\n          },\n        },\n      ]\n    });\n\n    await alert.present();\n  }\n\n  async linkedProduct(){\n    const alert = await this.alertController.create({\n      header: 'Este producto ya esta vinculado con otro',\n      buttons: [\n        {\n          text: 'Cancelar',\n          handler: () => {\n            console.log('Cancelar');\n          },\n        },\n        {\n          text: 'Actualizar vinculo',\n          handler: () => {\n            console.log('Actualizar');\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n\n  async whitOutCod() {\n    const alert = await this.alertController.create({\n      header: 'Debe ingresar un codigo',\n      subHeader: 'Puede ingresar el codigo manualmente',\n      inputs: [\n        {\n          placeholder: 'Codigo',\n          name: 'cod',\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancelar',\n          role: 'cancel'\n        },\n        {\n          text: 'Aceptar',\n          handler: (alertData) => {\n            this.scannerService.triggerSendCod.emit(alertData.cod);\n          },\n        },\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { SccanerComponent } from './sccaner/sccaner.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ScannedProductListComponent } from './scanned-product-list/scanned-product-list.component';\r\nimport { FileProductConfirmListComponent } from './file-product-confirm-list/file-product-confirm-list.component';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { NewFileProductComponent } from './new-file-product/new-file-product.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SccanerComponent,\r\n    ScannedProductListComponent,\r\n    FileProductConfirmListComponent,\r\n    NewFileProductComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    IonicModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2SearchPipeModule\r\n\r\n  ],\r\n  exports: [\r\n    SccanerComponent,\r\n    ScannedProductListComponent,\r\n    FileProductConfirmListComponent,\r\n    NewFileProductComponent\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { modalController } from '@ionic/core';\nimport { CodesRequestService } from 'src/app/controller/codes/codes-request.service';\nimport { ScannerRequestService } from 'src/app/controller/scanner/scanner-request.service';\nimport { Codes } from 'src/app/entities/codes/codes';\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\nimport { ScannerService } from 'src/app/services/scanner-service/scanner.service';\nimport { FileProduct } from '../../entities/file-product/file-product';\n\n@Component({\n  selector: 'app-file-product-confirm-list',\n  templateUrl: './file-product-confirm-list.component.html',\n  styleUrls: ['./file-product-confirm-list.component.scss'],\n})\nexport class FileProductConfirmListComponent implements OnInit {\n  isModalOpen = false;\n  fileProducts: FileProduct[]; // Almacena lista de FileProducts donde el COD coincida\n  allFileProducts: FileProduct[]; // Almacena la lista de todos los FileProducts existentes\n  scannerProductAmount: ScannerProduct; // Almacena el amount pasado por ScannedComponent\n  filterTerm!: string; // Fitro de busqueda\n  chekingBy: boolean; // Almacena si la busqueda solo sera por nombre o por nombre y codigo\n  searchby = true; // busqueda por cod o nombre, true === cod\n  cod: Codes; // Almacena el codigo\n  varNewFileProduct = false;\n\n  constructor(\n    private scannerService: ScannerService,\n    private codesRequestService: CodesRequestService,\n    private scannerRequestService: ScannerRequestService\n  ) {}\n\n  ngOnInit(): void {\n    this.scannerService.triggerOpenModal.subscribe((data) => {\n      console.log(data);\n      this.setOpen();\n    });\n    // Espera a que se le envie la cantidad y el codigo a relacionar con un ScannedProduct\n    this.scannerService.triggerSendScannedProductAmount.subscribe((data) => {\n      console.log('Datos entrantes', data.cod, data.amount, data.chekingByValue);\n      this.chekingBy = data.chekingByValue;\n      if (!this.chekingBy) {\n        this.searchby = false;\n      }\n      this.newFileProduct(false); // Hace que no se muestre el newFileProduct\n      if (data.cod !== '000000000000') {\n        this.getAllFileProductsByCodesId(data.cod); // Llama a obtener todos los FileProducts que coincidan con el codigo\n        this.cod = {\n          id: data.cod\n        }; // Almacena el codigo en la variable cod\n      }\n      this.getAllFileProducts(); // Llama a todos los fileProductF\n      // Almacena la cantidad a ingresar en scanned product en la variable scannerProductAmount\n      this.scannerProductAmount = {\n        amount: data.amount\n      };\n    });\n    // REVISAR\n    this.scannerService.triggerSelectItem.subscribe((data) => {\n      this.selectItem(data);\n    });\n  }\n\n  setOpen() {\n    if (!this.isModalOpen) {\n      this.isModalOpen = true;\n    } else {\n      this.isModalOpen = false;\n    }\n  }\n\n  public getAllFileProductsByCodesId(data: string) {\n    // Guarda en fileProducts los FileProducts que coincidan con el codigo\n    this.codesRequestService\n      .getAllFileProductsByCodesId(data)\n      .subscribe((requestData) => {\n        this.fileProducts = requestData;\n      });\n  }\n\n  public getAllFileProducts() {\n    // LLama a todos los FileProducts y los almacena en allFileProducts\n    this.codesRequestService.getAllFileProducts().subscribe((data) => {\n      this.allFileProducts = data;\n    });\n  }\n\n  // Vincula al nuevo scanned product a un file product\n  // Si ya estan viculados simplemente actualiza la cantidad de ScannedProduct\n  public selectItem(fileProductId: number) {\n    this.scannerRequestService\n      .newOrUpdateScannedProduct(fileProductId, this.scannerProductAmount)\n      .subscribe(\n        d => {\n          console.log(d);\n          this.codesRequestService.addCode(fileProductId, this.cod).subscribe(data => {\n            console.log('Cod agregado', data);\n          });\n          this.scannerRequestService\n            .getAllScannedProduct()\n            .subscribe((data) => {\n              this.scannerService.triggerUpdatedListScanned.emit(data);\n            });\n            this.setOpen();\n        },\n        (err) => {\n          console.error('Error', err);\n        }\n      );\n  }\n\n  searchBy() {\n    this.newFileProduct(false);\n    if (this.searchby) {\n      this.searchby = false;\n    } else {\n      this.searchby = true;\n    };\n  }\n\n  newFileProduct(value: boolean) {\n    if (this.varNewFileProduct === true) {\n      this.varNewFileProduct = false;\n    } else {\n      this.varNewFileProduct = value;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { FileProductRequestService } from 'src/app/controller/fileProduct/file-product-request.service';\nimport { FileProduct } from 'src/app/entities/file-product/file-product';\nimport { ScannerService } from 'src/app/services/scanner-service/scanner.service';\n\n@Component({\n  selector: 'app-new-file-product',\n  templateUrl: './new-file-product.component.html',\n  styleUrls: ['./new-file-product.component.scss'],\n})\nexport class NewFileProductComponent implements OnInit {\n\n  newFileProdcuctForm!: FormGroup;\n\n  constructor(private fileProductRequestService: FileProductRequestService, private scannerService: ScannerService) {\n    this.newFileProdcuctForm = new FormGroup({\n      productName: new FormControl('', Validators.required),\n      mark: new FormControl('', Validators.required),\n      amount: new FormControl('', Validators.required)\n    });\n }\n\n  ngOnInit() {}\n\n  saveFileProduct() {\n    const form = this.newFileProdcuctForm.value;\n    const fileProduct: FileProduct = {\n      productName: form.productName,\n      mark: form.mark,\n      amount: form.amount\n    };\n    this.fileProductRequestService.newFileProduct(fileProduct).subscribe(data => {\n      this.scannerService.triggerSelectItem.emit(data.id);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { ScannerRequestService } from 'src/app/controller/scanner/scanner-request.service';\r\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\r\nimport { ScannerService } from 'src/app/services/scanner-service/scanner.service';\r\nimport { AlertsService } from '../alerts/alerts.service';\r\n\r\n@Component({\r\n  selector: 'app-scanned-product-list',\r\n  templateUrl: './scanned-product-list.component.html',\r\n  styleUrls: ['./scanned-product-list.component.scss'],\r\n})\r\nexport class ScannedProductListComponent implements OnInit {\r\n\r\n  listProductsScanneds: ScannerProduct[];\r\n\r\n  constructor(private scannerService: ScannerService,\r\n     private scannerRequestService: ScannerRequestService,\r\n    private alertsService: AlertsService) {}\r\n\r\n  ngOnInit() {\r\n    this.scannerRequestService.getAllScannedProduct().subscribe(data => {\r\n      this.listProductsScanneds = data;\r\n    });\r\n    this.scannerService.triggerUpdatedListScanned.subscribe(data => {\r\n      console.log('Scanned Updated', data);\r\n      this.listProductsScanneds = data;\r\n    });\r\n  }\r\n\r\n  deleteProduct(id: number){\r\n    this.alertsService.deleteScannedProduct(id);\r\n  }\r\n\r\n  productUpdate(scannedProduct: ScannerProduct){\r\n    this.alertsService.productUpdate(scannedProduct);\r\n  }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/member-ordering */\r\nimport { AfterViewChecked, Component, ViewChild, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport {IonInput} from '@ionic/angular';\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\r\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\r\nimport { ScannerService } from 'src/app/services/scanner-service/scanner.service';\r\nimport { AlertsService } from '../alerts/alerts.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sccaner',\r\n  templateUrl: './sccaner.component.html',\r\n  styleUrls: ['./sccaner.component.scss'],\r\n})\r\n//Clase que sirve para hacer el alta con o sin COD\r\nexport class SccanerComponent implements OnInit, AfterViewChecked {\r\n  cod = 'xxxxxxxxxxxx'; // Codigo de escaneo\r\n  chekingByValue = true; // Indica si la busqueda sera con o sin COD. True === con\r\n  productForm!: FormGroup;\r\n  // Variables para el foco de amount\r\n  focusIsSet!: boolean; //Inicia como falso\r\n  @ViewChild('amountInput', { static: false }) amountInput!: IonInput;\r\n\r\n  constructor(\r\n    private barcodeScanner: BarcodeScanner,\r\n    private scannerService: ScannerService,\r\n    private alertsService: AlertsService\r\n  ) {\r\n    this.productForm = new FormGroup({\r\n      amount: new FormControl(''), // Inicia vacio sin valor por default\r\n    });\r\n  }\r\n\r\n  // Se ejecuta cada vez que Angular detecta un cambio en la vista del componente y al inicio\r\n  ngAfterViewChecked(): void {\r\n    if (!this.focusIsSet) {\r\n      // Si focusIsSet es falso le da el foco al amountInput\r\n      this.amountInput.setFocus();\r\n\r\n      setTimeout(() => {\r\n        this.focusIsSet = true;\r\n      }, 1000); // Luego de un segundo cambia this.focusIsSet a verdero\r\n    }\r\n  }\r\n\r\n  // Se ejecuta solo una vez despues del contructor\r\n  ngOnInit(): void {\r\n    // Queda a la escucha de cambios en chekingByValue de HomePage\r\n    this.scannerService.triggerCheking.subscribe((data) => {\r\n      this.chekingByValue = data;\r\n    });\r\n    this.scannerService.triggerSendCod.subscribe((data) => {\r\n      this.cod = data;\r\n    });\r\n  }\r\n\r\n  scan() {\r\n    this.barcodeScanner\r\n      .scan()\r\n      .then((barcodeData) => {\r\n        if (barcodeData.text === '') {\r\n          this.cod = 'xxxxxxxxxxxx';\r\n        } else {\r\n          this.cod = barcodeData.text;\r\n        }\r\n      }).then(() => {\r\n        this.cod = 'hola mundo';\r\n      })\r\n      .catch((err) => {\r\n        console.log('Error', err);\r\n      });\r\n  }\r\n\r\n  pushProduct() {\r\n    this.scannerService.triggerOpenModal.emit(true);\r\n    // Trae los valores del formulario amount\r\n    const form = this.productForm.value;\r\n    if (!form.amount) {\r\n      // Si el amount === null entonces le pone 1 como default\r\n      form.amount = 1;\r\n    }\r\n    // Convierte el valor del form amount en un objeto del tipo ScannerProduct\r\n    const scannerProduct: ScannerProduct = {\r\n      amount: form.amount,\r\n    };\r\n\r\n    // Envia a FileProductConfirmListComponent el codigo y la catidad\r\n    this.scannerService.triggerSendScannedProductAmount.emit({\r\n      cod: this.cod,\r\n      amount: scannerProduct.amount,\r\n      chekingByValue: this.chekingByValue,\r\n    });\r\n\r\n    this.setDefaultValue();\r\n  }\r\n\r\n  setDefaultValue() {\r\n    //vuelve al imput amount vacio devuelta\r\n    this.productForm.setValue({\r\n      amount: '',\r\n    });\r\n  }\r\n\r\n  // Es usada por el html\r\n  presentAlert(){\r\n    this.alertsService.whitOutCod();\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Codes } from 'src/app/entities/codes/codes';\r\nimport { FileProduct } from 'src/app/entities/file-product/file-product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CodesRequestService {\r\n\r\n  //baseURL = 'http://168.232.165.65:8888/api';\r\n  baseURL = 'http://localhost:8888/api';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  public getAllFileProductsByCodesId(codesId: string): Observable<FileProduct[]> {\r\n    return this.httpClient.get<FileProduct[]>(this.baseURL + '/codes/' + codesId + '/file-products');\r\n  }\r\n\r\n  public getAllFileProducts(): Observable<FileProduct[]> {\r\n    return this.httpClient.get<FileProduct[]>(this.baseURL + '/file-products');\r\n  }\r\n\r\n  public addCode(fileProductId: number, codesRequest: Codes) {\r\n    return this.httpClient.post<Codes>(this.baseURL + '/file-products/' + fileProductId + '/codes', codesRequest);\r\n  }\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { FileProduct } from 'src/app/entities/file-product/file-product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileProductRequestService {\r\n\r\n  //baseURL = 'http://168.232.165.65:8888/api';\r\n  baseURL = 'http://localhost:8888/api';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  //Post File Product\r\n  public newFileProduct(fileProduct: FileProduct): Observable<FileProduct> {\r\n    return this.httpClient.post<FileProduct>(this.baseURL + '/file-products/new', fileProduct);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpStatusCode } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ScannerRequestService {\r\n\r\n  //baseURL = 'http://168.232.165.65:8888/api';\r\n  baseURL = 'http://localhost:8888/api';\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  //Post or Update\r\n  public newOrUpdateScannedProduct(fileProdcutId: number, scannerProduct: ScannerProduct): Observable<ScannerProduct> {\r\n    return this.httpClient.post<ScannerProduct>(this.baseURL + '/scanned-product/new-update/' + fileProdcutId, scannerProduct);\r\n  }\r\n\r\n  //Put\r\n  public updateScannedProduct(scannedProductId: number, scannedProduct: ScannerProduct){\r\n    return this.httpClient.put<ScannerProduct>(this.baseURL + '/scanned-product/' + scannedProductId, scannedProduct);\r\n  }\r\n\r\n  //Get of ScannedProducts\r\n  public getAllScannedProduct(): Observable<ScannerProduct[]> {\r\n    return this.httpClient.get<ScannerProduct[]>(this.baseURL + '/scanned-product');\r\n  }\r\n\r\n  //Delete ScannedProduct\r\n  public deleteScannedProduct(id: number): Observable<HttpStatusCode> {\r\n    return this.httpClient.delete<HttpStatusCode>(this.baseURL + '/scanned-product/' + id);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { ComponentsModule } from '../components/components.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component } from '@angular/core';\nimport { ScannerService } from '../services/scanner-service/scanner.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n\n  cheking = 'con';\n  chekingByValue = true; // \"chekingByValue\" indica si la busqueda sera con o sin COD. True === con\n\n  constructor(private scannerService: ScannerService){\n\n  }\n\n  // La funcion chenkingBy() se usa para seleccionar si ingresar un producto por codigo o sin codigo\n  chekingBy() {\n    if (this.chekingByValue) { // El alta de scannedProduct sera con codigo\n      this.chekingByValue = false;\n      this.cheking = 'sin';\n    } else { // El alta de scannedProduct sera sin codigo\n      this.chekingByValue = true;\n      this.cheking = 'con';\n    }\n    // Envia a FileProductConfirmListComponent y a SccanerComponent si el alta sera con o sin COD. True o False\n    this.scannerService.triggerCheking.emit(this.chekingByValue);\n  }\n\n}\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { ScannerProduct } from 'src/app/entities/scanner-product/scanner-product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScannerService {\n\n  //Envio scanned product amount\n  @Output() triggerSendScannedProductAmount: EventEmitter<any> = new EventEmitter();\n\n  //emite la lista de  productos actualizada\n  @Output() triggerUpdatedListScanned: EventEmitter<ScannerProduct[]> = new EventEmitter(); //Objeto de la clase EventEmitter\n\n  //hacer cheking by cod o by name\n  @Output() triggerCheking: EventEmitter<boolean> = new EventEmitter();\n\n  //select item\n  @Output() triggerSelectItem: EventEmitter<any> = new EventEmitter();\n\n  //Send cod\n  @Output() triggerSendCod: EventEmitter<string> = new EventEmitter();\n\n  //Open Modal\n  @Output() triggerOpenModal: EventEmitter<boolean> = new EventEmitter();\n\n  constructor() { }\n\n}\n","import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); };\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n"],"names":["Injectable","AlertController","ScannerRequestService","ScannerService","AlertsService","constructor","alertController","scannerRequestService","scannerService","enterBack","alert","create","header","buttons","text","handler","console","log","present","deleteScannedProduct","id","subscribe","data","getAllScannedProduct","requestData","triggerUpdatedListScanned","emit","productUpdate","scannedProduct","inputs","placeholder","name","type","role","alertData","productUpdated","amount","fileProduct","updateScannedProduct","returnData","linkedProduct","whitOutCod","subHeader","triggerSendCod","cod","providedIn","NgModule","Pipe","ɵngcc0","Ng2SearchPipe","transform","items","term","filter","toCompare","toLowerCase","checkInside","item","property","undefined","toString","includes","ɵfac","Ng2SearchPipe_Factory","t","ɵpipe","ɵɵdefinePipe","pure","ɵprov","ɵɵdefineInjectable","token","factory","ctorParameters","ngDevMode","ɵsetClassMetadata","args","Ng2SearchPipeModule","Ng2SearchPipeModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sourceRoot":"webpack:///","x_google_ignoreList":[13]}